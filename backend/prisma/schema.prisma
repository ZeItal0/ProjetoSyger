generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum NivelAcesso {
  Administrador
  Funcionario_Comum
  Financeiro_Gerente
}

enum StatusUsuario {
  Ativo
  Suspenso
  Inativo
}

enum TipoMovimentacao {
  Entrada
  Saida
  Reestoque
  Ajuste
}

enum TipoVenda {
  Venda_Rapida
  Mesa
  Marmita
}

enum FormaPagamento {
  Dinheiro
  Cartao
  Pix
}

enum StatusPedido {
  Pendente
  Concluido
  Estornado
}

enum StatusMesa {
  Aberta
  Fechada
}

enum StatusMarmita {
  Em_espera
  Finalizado
}

enum StatusDivida {
  A_pagar
  Pago
  Vencida
  Cancelado_Estornado
}

enum StatusCardapio {
  Ativo
  Inativo
}

model Usuarios {
  id_usuario              Int       @id @default(autoincrement())
  nome_completo           String    @db.VarChar(255)
  email                   String    @unique @db.VarChar(255)
  usuario       String    @unique @db.VarChar(100)
  cnpj          String?   @unique @db.VarChar(18)
  senha_hash              String    @db.VarChar(255)
  cargo                   String    @db.VarChar(100)
  nivel_acesso            NivelAcesso
  status                  StatusUsuario @default(Ativo)
  data_cadastro           DateTime  @default(now())
  data_ultima_atualizacao DateTime  @default(now())

  movimentacoes           MovimentacaoEstoque[]
  pedidos                 Pedidos[]
  despesas                Despesas[]
  historicos              Historico_Auditoria[]
  mensagens_enviadas      MensagensInternas[] @relation("Remetente")
  mensagens_recebidas     MensagensInternas[] @relation("Destinatario")
  alertas                 Alertas[]
}

model Fornecedores {
  id_fornecedor      Int       @id @default(autoincrement())
  nome_empresa       String    @db.VarChar(255)
  cnpj               String?   @unique @db.VarChar(18)
  nome_contato       String?   @db.VarChar(255)
  email              String?   @db.VarChar(255)
  telefone           String?   @db.VarChar(20)
  inscricao_estadual String?   @db.VarChar(50)
  cep                String?   @db.VarChar(10)
  rua                String?   @db.VarChar(255)
  numero             String?   @db.VarChar(100)
  bairro             String?   @db.VarChar(255)
  observacoes        String?   @db.VarChar(500)
  data_cadastro      DateTime  @default(now())

  produtos           Fornecedor_Produto[]
  despesas           Despesas[]
}

model CategoriasProduto {
  id_categoria_produto Int      @id @default(autoincrement())
  nome_categoria        String  @unique @db.VarChar(100)
  produtos              Produtos[]
}

model UnidadesMedida {
  id_unidade_medida Int      @id @default(autoincrement())
  nome_unidade      String   @unique @db.VarChar(50)
  produtos          Produtos[]
  ingredientes      Prato_Ingrediente[]
  movimentacoes     MovimentacaoEstoque[]
}

model Produtos {
  id_produto              Int       @id @default(autoincrement())
  nome_produto            String    @db.VarChar(255)
  id_categoria_produto    Int
  id_unidade_medida       Int
  validade                DateTime?
  quantidade_atual        Decimal   @default(0.00)
  quantidade_minima       Decimal   @default(0.00)
  forma_compra            String?   @db.VarChar(50)
  custo_unitario          Decimal?
  data_cadastro           DateTime  @default(now())
  data_ultima_atualizacao DateTime  @default(now())

  categoria               CategoriasProduto @relation(fields: [id_categoria_produto], references: [id_categoria_produto])
  unidade                 UnidadesMedida @relation(fields: [id_unidade_medida], references: [id_unidade_medida])
  fornecedores            Fornecedor_Produto[]
  ingredientes            Prato_Ingrediente[]
  movimentacoes           MovimentacaoEstoque[]
  itensPedido             Pedido_Itens[]
}

model Fornecedor_Produto {
  id_fornecedor Int
  id_produto    Int

  fornecedor    Fornecedores @relation(fields: [id_fornecedor], references: [id_fornecedor])
  produto       Produtos     @relation(fields: [id_produto], references: [id_produto])

  @@id([id_fornecedor, id_produto])
}

model MovimentacaoEstoque {
  id_movimentacao   Int       @id @default(autoincrement())
  id_produto        Int
  tipo_movimentacao TipoMovimentacao
  quantidade        Decimal
  id_unidade_medida Int
  data_movimentacao DateTime  @default(now())
  id_usuario        Int?
  observacoes       String?   @db.VarChar(500)

  produto           Produtos       @relation(fields: [id_produto], references: [id_produto])
  unidade           UnidadesMedida @relation(fields: [id_unidade_medida], references: [id_unidade_medida])
  usuario           Usuarios?      @relation(fields: [id_usuario], references: [id_usuario])
}

model CategoriasPrato {
  id_categoria_prato Int      @id @default(autoincrement())
  nome_categoria     String   @unique @db.VarChar(100)
  pratos             Pratos[]
}

model Pratos {
  id_prato           Int       @id @default(autoincrement())
  nome_prato         String    @db.VarChar(255)
  id_categoria_prato Int
  tempo_preparo      Int?
  valor_base_custo   Decimal?
  descricao          String?   @db.VarChar(500)
  data_cadastro      DateTime  @default(now())

  categoria          CategoriasPrato @relation(fields: [id_categoria_prato], references: [id_categoria_prato])
  ingredientes       Prato_Ingrediente[]
  variacoes          VariacoesPorcao[]
  itensPedido        Pedido_Itens[]
  cardapios          CardapioPratos[]
}

model Prato_Ingrediente {
  id_prato          Int
  id_produto        Int
  quantidade        Decimal
  id_unidade_medida Int

  prato             Pratos          @relation(fields: [id_prato], references: [id_prato])
  produto           Produtos        @relation(fields: [id_produto], references: [id_produto])
  unidade           UnidadesMedida  @relation(fields: [id_unidade_medida], references: [id_unidade_medida])

  @@id([id_prato, id_produto])
}

model VariacoesPorcao {
  id_variacao         Int       @id @default(autoincrement())
  id_prato            Int
  nome_menu           String    @db.VarChar(100)
  multiplicador_receita Decimal?
  preco_venda         Decimal

  prato               Pratos @relation(fields: [id_prato], references: [id_prato])
  adicionais          VariacaoPorcao_Adicional[]
  itensPedido         Pedido_Itens[]
}

model Adicionais {
  id_adicional   Int       @id @default(autoincrement())
  nome_adicional String    @db.VarChar(255)
  preco          Decimal
  variacoes      VariacaoPorcao_Adicional[]
}

model VariacaoPorcao_Adicional {
  id_variacao Int
  id_adicional Int

  variacao   VariacoesPorcao @relation(fields: [id_variacao], references: [id_variacao])
  adicional  Adicionais      @relation(fields: [id_adicional], references: [id_adicional])

  @@id([id_variacao, id_adicional])
}

model Mesas {
  id_mesa     Int        @id @default(autoincrement())
  numero_mesa String     @unique @db.VarChar(50)
  status      StatusMesa @default(Fechada)
  capacidade  Int?

  pedidos     Pedidos[]
}

model Marmitas {
  id_marmita     Int            @id @default(autoincrement())
  numero_marmita String         @unique @db.VarChar(50)
  status         StatusMarmita  @default(Em_espera)

  pedidos        Pedidos[]
}

model Pedidos {
  id_pedido       Int           @id @default(autoincrement())
  tipo_venda      TipoVenda
  id_mesa         Int?
  id_marmita      Int?
  data_hora_pedido DateTime      @default(now())
  subtotal        Decimal
  desconto        Decimal        @default(0.00)
  total_liquido   Decimal
  forma_pagamento FormaPagamento
  status_pedido   StatusPedido   @default(Pendente)
  id_usuario      Int?

  mesa            Mesas?         @relation(fields: [id_mesa], references: [id_mesa])
  marmita         Marmitas?      @relation(fields: [id_marmita], references: [id_marmita])
  usuario         Usuarios?      @relation(fields: [id_usuario], references: [id_usuario])
  itens           Pedido_Itens[]
}

model Pedido_Itens {
  id_item_pedido Int       @id @default(autoincrement())
  id_pedido      Int
  id_prato       Int?
  id_produto     Int?
  id_variacao    Int?
  quantidade     Decimal
  preco_unitario Decimal

  pedido         Pedidos          @relation(fields: [id_pedido], references: [id_pedido])
  prato          Pratos?          @relation(fields: [id_prato], references: [id_prato])
  produto        Produtos?        @relation(fields: [id_produto], references: [id_produto])
  variacao       VariacoesPorcao? @relation(fields: [id_variacao], references: [id_variacao])
}

model CategoriasFinanceiras {
  id_categoria_financeira Int      @id @default(autoincrement())
  nome_categoria          String   @unique @db.VarChar(100)
  despesas                Despesas[]
}

model Despesas {
  id_despesa              Int       @id @default(autoincrement())
  descricao               String    @db.VarChar(255)
  id_fornecedor           Int?
  valor_original          Decimal
  id_categoria_financeira Int
  data_vencimento         DateTime
  status_divida           StatusDivida
  data_pagamento          DateTime?
  data_registro           DateTime @default(now())
  id_usuario_registro     Int?

  fornecedor              Fornecedores? @relation(fields: [id_fornecedor], references: [id_fornecedor])
  categoria               CategoriasFinanceiras @relation(fields: [id_categoria_financeira], references: [id_categoria_financeira])
  usuario                 Usuarios?     @relation(fields: [id_usuario_registro], references: [id_usuario])
}

model Historico_Auditoria {
  id_historico Int       @id @default(autoincrement())
  id_usuario   Int?
  acao         String    @db.VarChar(255)
  detalhes     String?   @db.VarChar(500)
  data_hora    DateTime  @default(now())

  usuario      Usuarios? @relation(fields: [id_usuario], references: [id_usuario])
}

model MensagensInternas {
  id_mensagem    Int       @id @default(autoincrement())
  id_remetente   Int
  id_destinatario Int?
  assunto        String?   @db.VarChar(255)
  conteudo       String    @db.VarChar(1000)
  data_envio     DateTime  @default(now())
  lida           Boolean   @default(false)

  remetente      Usuarios  @relation("Remetente", fields: [id_remetente], references: [id_usuario])
  destinatario   Usuarios? @relation("Destinatario", fields: [id_destinatario], references: [id_usuario])
}

model Alertas {
  id_alerta         Int      @id @default(autoincrement())
  tipo_alerta       String?  @db.VarChar(100)
  mensagem          String   @db.VarChar(500)
  data_criacao      DateTime @default(now())
  id_usuario_destino Int?
  lido              Boolean  @default(false)

  usuario_destino   Usuarios? @relation(fields: [id_usuario_destino], references: [id_usuario])
}

model Cardapio {
  id_cardapio Int      @id @default(autoincrement())
  nome        String   @db.VarChar(100)
  data        DateTime @default(now())
  status      StatusCardapio @default(Ativo)

  pratos      CardapioPratos[]
}

model CardapioPratos {
  id_cardapio_prato Int  @id @default(autoincrement())
  id_cardapio       Int
  id_prato          Int
  disponivel        Boolean @default(true)

  cardapio          Cardapio @relation(fields: [id_cardapio], references: [id_cardapio])
  prato             Pratos   @relation(fields: [id_prato], references: [id_prato])
}



